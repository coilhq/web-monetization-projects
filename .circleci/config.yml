version: 2.1

parameters:
  coil_domain:
    type: enum
    default: "https://coil.com"
    enum: ["https://coil.com", "https://staging.coil.com"]

jobs:
  # Run Linting
  lint-all:
    docker:
        - image: circleci/node:14.15.5-buster-browsers
    steps:
      - checkout
      # Download and cache dependencies
      - &restore_cache
#        run:
#         name: Restore Cache Dummy
#         command: |
#           echo Restore Cache Dummy!
        restore_cache:
          keys:
            - v5-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}
      - &yarn_install
        run:
          name: Yarn Install
          command: |
            yarn --immutable
            export PUPPETEER_PRODUCT='firefox'
            yarn rebuild puppeteer
      - run:
          name: Lint Project
          command: |
            # show only errors with --quiet
            yarn lint:all --quiet
      - &save_cache
        save_cache:
          paths:
          - node_modules
          - .yarn
          - pw-browsers
          key: v5-dependencies-{{ checksum "package.json" }}-{{ checksum "yarn.lock" }}

  coil-extension-package:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Package for firefox
          command: |
            cd packages/coil-extension
            ./package.sh firefox
      - run:
          name: Package for chrome
          command: |
            cd packages/coil-extension
            ./package.sh chrome
      - run:
          name: Lint firefox package
          command: |
            cd packages/coil-extension
            yarn addons-linter coilfirefoxextension@coil.com.xpi
      - *save_cache

  coil-extension-playwright:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    environment:
      COIL_DOMAIN: << pipeline.parameters.coil_domain >>
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: BROWSER_TYPE=chrome ./test.sh test/playwright/logout-test.ts
          command: |
            cd packages/coil-extension
            export BROWSER_TYPE=chrome
            [[ $COIL_DOMAIN = "https://coil.com" ]] && build_cmd="build-prod" || build_cmd="build-staging"
            yarn $build_cmd $BROWSER_TYPE
            xvfb-run -a ./test.sh test/playwright/logout-test.ts
      - run:
          name: BROWSER_TYPE=firefox test.sh test/playwright/logout-test.ts
          command: |
            cd packages/coil-extension
            export BROWSER_TYPE=firefox
            [[ $COIL_DOMAIN = "https://coil.com" ]] && build_cmd="build-prod" || build_cmd="build-staging"
            yarn $build_cmd $BROWSER_TYPE
            xvfb-run -a ./test.sh test/playwright/logout-test.ts
      - *save_cache

  coil-extension-playwright-transpile-only:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    environment:
      COIL_DOMAIN: << pipeline.parameters.coil_domain >>
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: BROWSER_TYPE=chrome ./test.sh test/playwright/logout-test.ts
          command: |
            cd packages/coil-extension
            export BROWSER_TYPE=chrome
            [[ $COIL_DOMAIN = "https://coil.com" ]] && build_cmd="build-prod" || build_cmd="build-staging"
            BUILD_TS=false TS_LOADER_TRANSPILE_ONLY=true yarn $build_cmd $BROWSER_TYPE
            xvfb-run -a ./test.sh test/playwright/logout-test.ts

      - run:
          name: BROWSER_TYPE=firefox test.sh test/playwright/logout-test.ts
          command: |
            cd packages/coil-extension
            export BROWSER_TYPE=firefox
            [[ $COIL_DOMAIN = "https://coil.com" ]] && build_cmd="build-prod" || build_cmd="build-staging"
            BUILD_TS=false TS_LOADER_TRANSPILE_ONLY=true yarn $build_cmd $BROWSER_TYPE
            xvfb-run -a ./test.sh test/playwright/logout-test.ts
      - *save_cache

  build-all-package-references-typescript:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Build Root TypeScript Project - tsconfig.build.json
          command: |
            yarn build:ts --verbose
      - *save_cache

  build-root-tsconfig:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Build Root TypeScript Project - tsconfig.json
          command: |
            yarn tsc -b tsconfig.json --verbose
      - *save_cache

  jest-all:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    resource_class: large
    steps:
      - run:
          name: echo TESTING_ENV_VAR $TESTING_ENV_VAR should be masked
          command: echo TESTING_ENV_VAR $TESTING_ENV_VAR
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Run jest via dynamic compilation
          command: |
            export DEBUG='coil*'
            export TS_JEST_MAP_PATHS_TO_MODULES=true
            xvfb-run -a yarn test:coverage
      - run:
          name: Run jest from build
          command: |
            export DEBUG='coil*'
            yarn clean:build
            yarn build:ts:verbose
            export TS_JEST_MAP_PATHS_TO_MODULES=false
            xvfb-run -a yarn test:coverage
      - *save_cache

  jest-lerna-all:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    resource_class: xlarge
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Lerna run jest via dynamic compilation
          command: |
            export TS_JEST_MAP_PATHS_TO_MODULES=true
            xvfb-run -a yarn lerna run --stream test:coverage
      - run:
          name: Lerna run jest from build
          command: |
            yarn clean:build
            yarn build:ts:verbose
            export TS_JEST_MAP_PATHS_TO_MODULES=false
            xvfb-run -a yarn lerna run --stream test:coverage
      - *save_cache

  packages-build-scripts:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    steps:
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Packages Build Scripts
          command: |
            yarn lerna run --concurrency=1 --stream build
      - *save_cache

  yarn-format-and-upkeep-diff-check:
    docker:
      - image: circleci/node:14.15.5-buster-browsers
    steps:
      - run:
          name: echo TESTING_ENV_VAR $TESTING_ENV_VAR should be empty
          command: echo TESTING_ENV_VAR $TESTING_ENV_VAR
      - checkout
      - *restore_cache
      - *yarn_install
      - run:
          name: Yarn Dedupe Check
          command: |
            yarn dedupe --check
      - run:
          name: Yarn format git diff --exit-code
          command: |
            yarn format
            yarn upkeep
            # yarn.lock sometimes (rarely) changes for unknown reasons
            # perhaps different versions of yarn ??
            # we don't *really* care so exclude it from the diff check
            git diff --exit-code -- . ':!yarn.lock'
      - *save_cache

workflows:
  version: 2
  build:
    jobs:
      - lint-all
      - yarn-format-and-upkeep-diff-check
      - build-all-package-references-typescript
      - build-root-tsconfig
      - coil-extension-package
      - packages-build-scripts
      - jest-all:
          context: web-monetization-tests
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
      - jest-lerna-all:
          context: web-monetization-tests
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
      - coil-extension-playwright:
          context: web-monetization-tests
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
      - coil-extension-playwright-transpile-only:
          context: web-monetization-tests
          filters:
            branches:
              # Forked pull requests have CIRCLE_BRANCH set to pull/XXX
              ignore: /pull\/[0-9]+/
